{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/Corona-Tracker-App/src/componenets/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          recovered\n        }) => recovered),\n        label: 'Recovered',\n        backgroundColor: 'rgba(255 , 0 , 0 , 0.5 )',\n        borderColor: 'lightgreen',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: '#4444ff',\n        borderColor: 'red',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/Corona-Tracker-App/src/componenets/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","data","confirmed","label","borderColor","fill","recovered","backgroundColor","deaths","container"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,IAAT,EAAgBC,GAAhB,QAA2B,iBAA3B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAK;AACf,QAAM,CAAEC,SAAF,EAAcC,YAAd,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAE,MAAK;AACZ,UAAMQ,QAAQ,GAAG,YAAW;AACxBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEAE,IAAAA,QAAQ;AACX,GAPQ,CAAT;AASA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,gBAEA,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEI,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPC,QAAAA,KAAK,EAAC,UAFC;AAGPC,QAAAA,WAAW,EAAC,SAHL;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKN;AACAJ,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADN;AAEAH,QAAAA,KAAK,EAAC,WAFN;AAGAI,QAAAA,eAAe,EAAC,0BAHhB;AAIAH,QAAAA,WAAW,EAAC,YAJZ;AAKAC,QAAAA,IAAI,EAAE;AALN,OALM,EAWL;AACCJ,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEU,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECL,QAAAA,KAAK,EAAC,QAFP;AAGCC,QAAAA,WAAW,EAAC,SAHb;AAICA,QAAAA,WAAW,EAAC,KAJb;AAKCC,QAAAA,IAAI,EAAE;AALP,OAXK;AAFR,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAwBK,IAzBT;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAACqB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,SADL,CADJ;AAKH,CA5CD;;AA6CA,eAAeN,KAAf","sourcesContent":["import React , { useState , useEffect }from 'react';\nimport { fetchDailyData } from '../../api/index'\nimport { Line , Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = () =>{\n    const [ dailyData , setDailyData] = useState([])\n\n    useEffect (() =>{\n        const fetchAPI = async () =>{\n            setDailyData(await fetchDailyData());\n        }\n        console.log(dailyData);\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length\n        ?\n        <Line \n          data={{\n              labels: dailyData.map(({ date }) => date),\n              datasets: [{\n                  data: dailyData.map(({ confirmed }) => confirmed),\n                  label:'Infected',\n                  borderColor:'#3333ff',\n                  fill: true,\n              } , {\n                  data: dailyData.map(({ recovered }) => recovered),\n                  label:'Recovered',\n                  backgroundColor:'rgba(255 , 0 , 0 , 0.5 )',\n                  borderColor:'lightgreen',\n                  fill: true,\n                } ,{\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label:'Deaths',\n                    borderColor:'#4444ff',\n                    borderColor:'red',\n                    fill: true,\n                }] ,\n            }}\n        /> : null\n    );\n    return(\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\nexport default Chart;     "]},"metadata":{},"sourceType":"module"}