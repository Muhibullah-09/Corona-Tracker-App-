{"ast":null,"code":"var _jsxFileName = \"/home/muhibullahkamali/GitHub/Corona-Tracker-App/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          recovered\n        }) => recovered),\n        label: 'Recovered',\n        borderColor: 'seagreen',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(92, 173, 55, 0.932)', 'rgb(190, 31, 20)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current Situation  In ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/muhibullahkamali/GitHub/Corona-Tracker-App/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","barChart","backgroundColor","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React , { useState , useEffect }from 'react';\nimport { fetchDailyData } from '../../api/index'\nimport { Line , Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ( { data : { confirmed , recovered , deaths}, country }) =>{\n    const [ dailyData , setDailyData] = useState({})\n\n    useEffect (() =>{\n        const fetchAPI = async () =>{\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    } , []);\n\n\n    const lineChart = (\n        dailyData.length\n        ? \n        <Line \n          data={{\n              labels: dailyData.map(({ date }) => date),\n              datasets: [{\n                  data: dailyData.map(({ confirmed }) => confirmed),\n                  label:'Infected',\n                  borderColor:'#3333ff',\n                  fill: true,\n                },{\n                     data: dailyData.map(({ recovered }) => recovered),\n                     label:'Recovered',\n                     borderColor:'seagreen',\n                     fill: true,\n                    } ,\n                    {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label:'Deaths',\n                    borderColor:'red',\n                    fill: true,\n                }], \n            }}\n        /> : null\n    );\n    const barChart =(\n        confirmed \n        ? (\n            <Bar\n              data = {{\n                  labels:['Infected' , 'Recovered' , 'Deaths'],\n                  datasets:[{\n                      label: 'People',\n                      backgroundColor: [\n                          'rgba(0, 0, 255, 0.5)',\n                          'rgba(92, 173, 55, 0.932)',\n                          'rgb(190, 31, 20)',\n                      ],\n                      data: [ confirmed.value , recovered.value , deaths.value]\n                  }]\n              }}\n              options ={{\n                  legend:{display: false},\n                  title:{ display:true , text:`Current Situation  In ${country}`},\n              }}\n            /> \n        ) : null\n    );\n\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\nexport default Chart;     "]},"metadata":{},"sourceType":"module"}